services:
  express:
    build:
      context: .
      dockerfile: ./docker/express.dockerfile
    volumes:
      - ./express:/app
    working_dir: /app
    environment:
      PORT: ${EXPRESS_PORT}
      AUTH0_DOMAIN: ${AUTH0_DOMAIN}
      AUTH0_CLIENT_ID: ${AUTH0_EXPRESS_CLIENT_ID}
      AUTH0_CLIENT_SECRET: ${AUTH0_EXPRESS_CLIENT_SECRET}
    ports:
      - ${EXPRESS_PORT}:${EXPRESS_PORT}
    command: sh -c 'npm install && npm run start'
  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend.dockerfile
      target: development
    ports:
      - ${VITE_SERVER_PORT}:${VITE_SERVER_PORT}
      - ${VITE_PREVIEW_PORT}:${VITE_PREVIEW_PORT}
    volumes:
      - ./frontend:/app
    working_dir: /app
    environment:
      GRAPHQL_ENGINE_URL: http://${GRAPHQL_ENGINE_HOST}:${GRAPHQL_ENGINE_PORT}${GRAPHQL_ENGINE_PATH}
      AUTH0_DOMAIN: ${AUTH0_DOMAIN}
      AUTH0_KANBEN_CLIENT_ID: ${AUTH0_KANBEN_CLIENT_ID}
    command: sh -c 'npm install && npm run dev'
  codegen:
    build:
      context: .
      dockerfile: ./docker/codegen.dockerfile
    volumes:
      - ./frontend:/app
    working_dir: /app
    environment:
      GRAPHQL_ENGINE_URL: http://${GRAPHQL_ENGINE_HOST}:${GRAPHQL_ENGINE_PORT}${GRAPHQL_ENGINE_PATH}
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
    command: sh -c 'npm install && npm run generate'
    depends_on:
      - frontend
      - hasura
  postgres:
    image: postgres:12
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  hasura:
    build:
      context: .
      dockerfile: ./docker/hasura.dockerfile
    ports:
      - "${GRAPHQL_ENGINE_PORT}:8080"
    working_dir: /hasura
    volumes:
      - ./hasura:/hasura
    depends_on:
      - "postgres"
    restart: unless-stopped
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_DATABASE_URL: ${POSTGRES_DATABASE_URL}
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/default
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_MIGRATIONS_SERVER_TIMEOUT: 300
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_MIGRATIONS_DIR: /hasura/migrations
      HASURA_GRAPHQL_METADATA_DIR: /hasura/metadata
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_JWT_SECRET: ${HASURA_GRAPHQL_JWT_SECRET}
volumes:
  db_data:
